<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.rc.flow.dao.ChangeRequestMapper">
  <resultMap id="BaseResultMap" type="cn.rc.flow.domain.ChangeRequest">
    <id column="sys_id" jdbcType="CHAR" property="sysId" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="requested_by" jdbcType="CHAR" property="requestedBy" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="approval" jdbcType="VARCHAR" property="approval" />
    <result column="priority" jdbcType="INTEGER" property="priority" />
    <result column="risk" jdbcType="INTEGER" property="risk" />
    <result column="impact" jdbcType="INTEGER" property="impact" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="owner_group" jdbcType="CHAR" property="ownerGroup" />
    <result column="assignment_group" jdbcType="CHAR" property="assignmentGroup" />
    <result column="assigned_to" jdbcType="CHAR" property="assignedTo" />
    <result column="justification" jdbcType="VARCHAR" property="justification" />
    <result column="implementation_plan" jdbcType="VARCHAR" property="implementationPlan" />
    <result column="risk_impact_analysis" jdbcType="VARCHAR" property="riskImpactAnalysis" />
    <result column="backout_plan" jdbcType="VARCHAR" property="backoutPlan" />
    <result column="test_plan" jdbcType="VARCHAR" property="testPlan" />
    <result column="planned_start_date" jdbcType="TIMESTAMP" property="plannedStartDate" />
    <result column="planned_end_date" jdbcType="TIMESTAMP" property="plannedEndDate" />
    <result column="actual_start_date" jdbcType="TIMESTAMP" property="actualStartDate" />
    <result column="actual_end_date" jdbcType="TIMESTAMP" property="actualEndDate" />
    <result column="short_description" jdbcType="VARCHAR" property="shortDescription" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="close_notes" jdbcType="VARCHAR" property="closeNotes" />
    <result column="close_code" jdbcType="VARCHAR" property="closeCode" />
    <result column="closed_by" jdbcType="CHAR" property="closedBy" />
    <result column="closed_time" jdbcType="TIMESTAMP" property="closedTime" />
    <result column="created_by" jdbcType="CHAR" property="createdBy" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_by" jdbcType="CHAR" property="updatedBy" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="sys_mod_count" jdbcType="INTEGER" property="sysModCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sys_id, number, requested_by, category, state, approval, priority, risk, impact, 
    type, owner_group, assignment_group, assigned_to, justification, implementation_plan, 
    risk_impact_analysis, backout_plan, test_plan, planned_start_date, planned_end_date, 
    actual_start_date, actual_end_date, short_description, description, close_notes, 
    close_code, closed_by, closed_time, created_by, created_time, updated_by, updated_time, 
    sys_mod_count
  </sql>
  <select id="selectByExample" parameterType="cn.rc.flow.domain.ChangeRequestExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_change_request
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_change_request
    where sys_id = #{sysId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_change_request
    where sys_id = #{sysId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.rc.flow.domain.ChangeRequestExample">
    delete from t_change_request
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.rc.flow.domain.ChangeRequest">
    insert into t_change_request (sys_id, number, requested_by, 
      category, state, approval, 
      priority, risk, impact, 
      type, owner_group, assignment_group, 
      assigned_to, justification, implementation_plan, 
      risk_impact_analysis, backout_plan, test_plan, 
      planned_start_date, planned_end_date, actual_start_date, 
      actual_end_date, short_description, description, 
      close_notes, close_code, closed_by, 
      closed_time, created_by, created_time, 
      updated_by, updated_time, sys_mod_count
      )
    values (#{sysId,jdbcType=CHAR}, #{number,jdbcType=VARCHAR}, #{requestedBy,jdbcType=CHAR}, 
      #{category,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{approval,jdbcType=VARCHAR}, 
      #{priority,jdbcType=INTEGER}, #{risk,jdbcType=INTEGER}, #{impact,jdbcType=INTEGER}, 
      #{type,jdbcType=VARCHAR}, #{ownerGroup,jdbcType=CHAR}, #{assignmentGroup,jdbcType=CHAR}, 
      #{assignedTo,jdbcType=CHAR}, #{justification,jdbcType=VARCHAR}, #{implementationPlan,jdbcType=VARCHAR}, 
      #{riskImpactAnalysis,jdbcType=VARCHAR}, #{backoutPlan,jdbcType=VARCHAR}, #{testPlan,jdbcType=VARCHAR}, 
      #{plannedStartDate,jdbcType=TIMESTAMP}, #{plannedEndDate,jdbcType=TIMESTAMP}, #{actualStartDate,jdbcType=TIMESTAMP}, 
      #{actualEndDate,jdbcType=TIMESTAMP}, #{shortDescription,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{closeNotes,jdbcType=VARCHAR}, #{closeCode,jdbcType=VARCHAR}, #{closedBy,jdbcType=CHAR}, 
      #{closedTime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=CHAR}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=CHAR}, #{updatedTime,jdbcType=TIMESTAMP}, #{sysModCount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.rc.flow.domain.ChangeRequest">
    insert into t_change_request
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sysId != null">
        sys_id,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="requestedBy != null">
        requested_by,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="approval != null">
        approval,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="risk != null">
        risk,
      </if>
      <if test="impact != null">
        impact,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="ownerGroup != null">
        owner_group,
      </if>
      <if test="assignmentGroup != null">
        assignment_group,
      </if>
      <if test="assignedTo != null">
        assigned_to,
      </if>
      <if test="justification != null">
        justification,
      </if>
      <if test="implementationPlan != null">
        implementation_plan,
      </if>
      <if test="riskImpactAnalysis != null">
        risk_impact_analysis,
      </if>
      <if test="backoutPlan != null">
        backout_plan,
      </if>
      <if test="testPlan != null">
        test_plan,
      </if>
      <if test="plannedStartDate != null">
        planned_start_date,
      </if>
      <if test="plannedEndDate != null">
        planned_end_date,
      </if>
      <if test="actualStartDate != null">
        actual_start_date,
      </if>
      <if test="actualEndDate != null">
        actual_end_date,
      </if>
      <if test="shortDescription != null">
        short_description,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="closeNotes != null">
        close_notes,
      </if>
      <if test="closeCode != null">
        close_code,
      </if>
      <if test="closedBy != null">
        closed_by,
      </if>
      <if test="closedTime != null">
        closed_time,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="sysModCount != null">
        sys_mod_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sysId != null">
        #{sysId,jdbcType=CHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="requestedBy != null">
        #{requestedBy,jdbcType=CHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="approval != null">
        #{approval,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="risk != null">
        #{risk,jdbcType=INTEGER},
      </if>
      <if test="impact != null">
        #{impact,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="ownerGroup != null">
        #{ownerGroup,jdbcType=CHAR},
      </if>
      <if test="assignmentGroup != null">
        #{assignmentGroup,jdbcType=CHAR},
      </if>
      <if test="assignedTo != null">
        #{assignedTo,jdbcType=CHAR},
      </if>
      <if test="justification != null">
        #{justification,jdbcType=VARCHAR},
      </if>
      <if test="implementationPlan != null">
        #{implementationPlan,jdbcType=VARCHAR},
      </if>
      <if test="riskImpactAnalysis != null">
        #{riskImpactAnalysis,jdbcType=VARCHAR},
      </if>
      <if test="backoutPlan != null">
        #{backoutPlan,jdbcType=VARCHAR},
      </if>
      <if test="testPlan != null">
        #{testPlan,jdbcType=VARCHAR},
      </if>
      <if test="plannedStartDate != null">
        #{plannedStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="plannedEndDate != null">
        #{plannedEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="actualStartDate != null">
        #{actualStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="actualEndDate != null">
        #{actualEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="shortDescription != null">
        #{shortDescription,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="closeNotes != null">
        #{closeNotes,jdbcType=VARCHAR},
      </if>
      <if test="closeCode != null">
        #{closeCode,jdbcType=VARCHAR},
      </if>
      <if test="closedBy != null">
        #{closedBy,jdbcType=CHAR},
      </if>
      <if test="closedTime != null">
        #{closedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=CHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=CHAR},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysModCount != null">
        #{sysModCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.rc.flow.domain.ChangeRequestExample" resultType="java.lang.Long">
    select count(*) from t_change_request
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_change_request
    <set>
      <if test="record.sysId != null">
        sys_id = #{record.sysId,jdbcType=CHAR},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.requestedBy != null">
        requested_by = #{record.requestedBy,jdbcType=CHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.approval != null">
        approval = #{record.approval,jdbcType=VARCHAR},
      </if>
      <if test="record.priority != null">
        priority = #{record.priority,jdbcType=INTEGER},
      </if>
      <if test="record.risk != null">
        risk = #{record.risk,jdbcType=INTEGER},
      </if>
      <if test="record.impact != null">
        impact = #{record.impact,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerGroup != null">
        owner_group = #{record.ownerGroup,jdbcType=CHAR},
      </if>
      <if test="record.assignmentGroup != null">
        assignment_group = #{record.assignmentGroup,jdbcType=CHAR},
      </if>
      <if test="record.assignedTo != null">
        assigned_to = #{record.assignedTo,jdbcType=CHAR},
      </if>
      <if test="record.justification != null">
        justification = #{record.justification,jdbcType=VARCHAR},
      </if>
      <if test="record.implementationPlan != null">
        implementation_plan = #{record.implementationPlan,jdbcType=VARCHAR},
      </if>
      <if test="record.riskImpactAnalysis != null">
        risk_impact_analysis = #{record.riskImpactAnalysis,jdbcType=VARCHAR},
      </if>
      <if test="record.backoutPlan != null">
        backout_plan = #{record.backoutPlan,jdbcType=VARCHAR},
      </if>
      <if test="record.testPlan != null">
        test_plan = #{record.testPlan,jdbcType=VARCHAR},
      </if>
      <if test="record.plannedStartDate != null">
        planned_start_date = #{record.plannedStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.plannedEndDate != null">
        planned_end_date = #{record.plannedEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.actualStartDate != null">
        actual_start_date = #{record.actualStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.actualEndDate != null">
        actual_end_date = #{record.actualEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shortDescription != null">
        short_description = #{record.shortDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.closeNotes != null">
        close_notes = #{record.closeNotes,jdbcType=VARCHAR},
      </if>
      <if test="record.closeCode != null">
        close_code = #{record.closeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.closedBy != null">
        closed_by = #{record.closedBy,jdbcType=CHAR},
      </if>
      <if test="record.closedTime != null">
        closed_time = #{record.closedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=CHAR},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=CHAR},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sysModCount != null">
        sys_mod_count = #{record.sysModCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_change_request
    set sys_id = #{record.sysId,jdbcType=CHAR},
      number = #{record.number,jdbcType=VARCHAR},
      requested_by = #{record.requestedBy,jdbcType=CHAR},
      category = #{record.category,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      approval = #{record.approval,jdbcType=VARCHAR},
      priority = #{record.priority,jdbcType=INTEGER},
      risk = #{record.risk,jdbcType=INTEGER},
      impact = #{record.impact,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      owner_group = #{record.ownerGroup,jdbcType=CHAR},
      assignment_group = #{record.assignmentGroup,jdbcType=CHAR},
      assigned_to = #{record.assignedTo,jdbcType=CHAR},
      justification = #{record.justification,jdbcType=VARCHAR},
      implementation_plan = #{record.implementationPlan,jdbcType=VARCHAR},
      risk_impact_analysis = #{record.riskImpactAnalysis,jdbcType=VARCHAR},
      backout_plan = #{record.backoutPlan,jdbcType=VARCHAR},
      test_plan = #{record.testPlan,jdbcType=VARCHAR},
      planned_start_date = #{record.plannedStartDate,jdbcType=TIMESTAMP},
      planned_end_date = #{record.plannedEndDate,jdbcType=TIMESTAMP},
      actual_start_date = #{record.actualStartDate,jdbcType=TIMESTAMP},
      actual_end_date = #{record.actualEndDate,jdbcType=TIMESTAMP},
      short_description = #{record.shortDescription,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      close_notes = #{record.closeNotes,jdbcType=VARCHAR},
      close_code = #{record.closeCode,jdbcType=VARCHAR},
      closed_by = #{record.closedBy,jdbcType=CHAR},
      closed_time = #{record.closedTime,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=CHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=CHAR},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      sys_mod_count = #{record.sysModCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.rc.flow.domain.ChangeRequest">
    update t_change_request
    <set>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="requestedBy != null">
        requested_by = #{requestedBy,jdbcType=CHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="approval != null">
        approval = #{approval,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="risk != null">
        risk = #{risk,jdbcType=INTEGER},
      </if>
      <if test="impact != null">
        impact = #{impact,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="ownerGroup != null">
        owner_group = #{ownerGroup,jdbcType=CHAR},
      </if>
      <if test="assignmentGroup != null">
        assignment_group = #{assignmentGroup,jdbcType=CHAR},
      </if>
      <if test="assignedTo != null">
        assigned_to = #{assignedTo,jdbcType=CHAR},
      </if>
      <if test="justification != null">
        justification = #{justification,jdbcType=VARCHAR},
      </if>
      <if test="implementationPlan != null">
        implementation_plan = #{implementationPlan,jdbcType=VARCHAR},
      </if>
      <if test="riskImpactAnalysis != null">
        risk_impact_analysis = #{riskImpactAnalysis,jdbcType=VARCHAR},
      </if>
      <if test="backoutPlan != null">
        backout_plan = #{backoutPlan,jdbcType=VARCHAR},
      </if>
      <if test="testPlan != null">
        test_plan = #{testPlan,jdbcType=VARCHAR},
      </if>
      <if test="plannedStartDate != null">
        planned_start_date = #{plannedStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="plannedEndDate != null">
        planned_end_date = #{plannedEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="actualStartDate != null">
        actual_start_date = #{actualStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="actualEndDate != null">
        actual_end_date = #{actualEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="shortDescription != null">
        short_description = #{shortDescription,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="closeNotes != null">
        close_notes = #{closeNotes,jdbcType=VARCHAR},
      </if>
      <if test="closeCode != null">
        close_code = #{closeCode,jdbcType=VARCHAR},
      </if>
      <if test="closedBy != null">
        closed_by = #{closedBy,jdbcType=CHAR},
      </if>
      <if test="closedTime != null">
        closed_time = #{closedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=CHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=CHAR},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysModCount != null">
        sys_mod_count = #{sysModCount,jdbcType=INTEGER},
      </if>
    </set>
    where sys_id = #{sysId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.rc.flow.domain.ChangeRequest">
    update t_change_request
    set number = #{number,jdbcType=VARCHAR},
      requested_by = #{requestedBy,jdbcType=CHAR},
      category = #{category,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      approval = #{approval,jdbcType=VARCHAR},
      priority = #{priority,jdbcType=INTEGER},
      risk = #{risk,jdbcType=INTEGER},
      impact = #{impact,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      owner_group = #{ownerGroup,jdbcType=CHAR},
      assignment_group = #{assignmentGroup,jdbcType=CHAR},
      assigned_to = #{assignedTo,jdbcType=CHAR},
      justification = #{justification,jdbcType=VARCHAR},
      implementation_plan = #{implementationPlan,jdbcType=VARCHAR},
      risk_impact_analysis = #{riskImpactAnalysis,jdbcType=VARCHAR},
      backout_plan = #{backoutPlan,jdbcType=VARCHAR},
      test_plan = #{testPlan,jdbcType=VARCHAR},
      planned_start_date = #{plannedStartDate,jdbcType=TIMESTAMP},
      planned_end_date = #{plannedEndDate,jdbcType=TIMESTAMP},
      actual_start_date = #{actualStartDate,jdbcType=TIMESTAMP},
      actual_end_date = #{actualEndDate,jdbcType=TIMESTAMP},
      short_description = #{shortDescription,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      close_notes = #{closeNotes,jdbcType=VARCHAR},
      close_code = #{closeCode,jdbcType=VARCHAR},
      closed_by = #{closedBy,jdbcType=CHAR},
      closed_time = #{closedTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=CHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=CHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      sys_mod_count = #{sysModCount,jdbcType=INTEGER}
    where sys_id = #{sysId,jdbcType=CHAR}
  </update>
</mapper>