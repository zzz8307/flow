<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.rc.flow.dao.UserMapper">
  <resultMap id="BaseResultMap" type="cn.rc.flow.domain.User">
    <id column="sys_id" jdbcType="CHAR" property="sysId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="CHAR" property="userPassword" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="manager_id" jdbcType="CHAR" property="managerId" />
    <result column="employee_number" jdbcType="VARCHAR" property="employeeNumber" />
    <result column="email" jdbcType="CHAR" property="email" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="active" jdbcType="CHAR" property="active" />
    <result column="locked_out" jdbcType="CHAR" property="lockedOut" />
    <result column="created_by" jdbcType="CHAR" property="createdBy" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_by" jdbcType="CHAR" property="updatedBy" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="sys_mod_count" jdbcType="INTEGER" property="sysModCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sys_id, user_name, user_password, name, manager_id, employee_number, email, phone, 
    active, locked_out, created_by, created_time, updated_by, updated_time, sys_mod_count
  </sql>
  <select id="selectByExample" parameterType="cn.rc.flow.domain.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where sys_id = #{sysId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_user
    where sys_id = #{sysId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.rc.flow.domain.UserExample">
    delete from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.rc.flow.domain.User">
    insert into t_user (sys_id, user_name, user_password, 
      name, manager_id, employee_number, 
      email, phone, active, locked_out, 
      created_by, created_time, updated_by, 
      updated_time, sys_mod_count)
    values (#{sysId,jdbcType=CHAR}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=CHAR}, 
      #{name,jdbcType=VARCHAR}, #{managerId,jdbcType=CHAR}, #{employeeNumber,jdbcType=VARCHAR}, 
      #{email,jdbcType=CHAR}, #{phone,jdbcType=CHAR}, #{active,jdbcType=CHAR}, #{lockedOut,jdbcType=CHAR}, 
      #{createdBy,jdbcType=CHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=CHAR}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{sysModCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.rc.flow.domain.User">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sysId != null">
        sys_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="managerId != null">
        manager_id,
      </if>
      <if test="employeeNumber != null">
        employee_number,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="active != null">
        active,
      </if>
      <if test="lockedOut != null">
        locked_out,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="sysModCount != null">
        sys_mod_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sysId != null">
        #{sysId,jdbcType=CHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="managerId != null">
        #{managerId,jdbcType=CHAR},
      </if>
      <if test="employeeNumber != null">
        #{employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
      <if test="active != null">
        #{active,jdbcType=CHAR},
      </if>
      <if test="lockedOut != null">
        #{lockedOut,jdbcType=CHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=CHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=CHAR},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysModCount != null">
        #{sysModCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.rc.flow.domain.UserExample" resultType="java.lang.Long">
    select count(*) from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user
    <set>
      <if test="record.sysId != null">
        sys_id = #{record.sysId,jdbcType=CHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        user_password = #{record.userPassword,jdbcType=CHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.managerId != null">
        manager_id = #{record.managerId,jdbcType=CHAR},
      </if>
      <if test="record.employeeNumber != null">
        employee_number = #{record.employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=CHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=CHAR},
      </if>
      <if test="record.active != null">
        active = #{record.active,jdbcType=CHAR},
      </if>
      <if test="record.lockedOut != null">
        locked_out = #{record.lockedOut,jdbcType=CHAR},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=CHAR},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=CHAR},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sysModCount != null">
        sys_mod_count = #{record.sysModCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user
    set sys_id = #{record.sysId,jdbcType=CHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=CHAR},
      name = #{record.name,jdbcType=VARCHAR},
      manager_id = #{record.managerId,jdbcType=CHAR},
      employee_number = #{record.employeeNumber,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=CHAR},
      phone = #{record.phone,jdbcType=CHAR},
      active = #{record.active,jdbcType=CHAR},
      locked_out = #{record.lockedOut,jdbcType=CHAR},
      created_by = #{record.createdBy,jdbcType=CHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=CHAR},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      sys_mod_count = #{record.sysModCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.rc.flow.domain.User">
    update t_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=CHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="managerId != null">
        manager_id = #{managerId,jdbcType=CHAR},
      </if>
      <if test="employeeNumber != null">
        employee_number = #{employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=CHAR},
      </if>
      <if test="lockedOut != null">
        locked_out = #{lockedOut,jdbcType=CHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=CHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=CHAR},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysModCount != null">
        sys_mod_count = #{sysModCount,jdbcType=INTEGER},
      </if>
    </set>
    where sys_id = #{sysId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.rc.flow.domain.User">
    update t_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=CHAR},
      name = #{name,jdbcType=VARCHAR},
      manager_id = #{managerId,jdbcType=CHAR},
      employee_number = #{employeeNumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=CHAR},
      phone = #{phone,jdbcType=CHAR},
      active = #{active,jdbcType=CHAR},
      locked_out = #{lockedOut,jdbcType=CHAR},
      created_by = #{createdBy,jdbcType=CHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=CHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      sys_mod_count = #{sysModCount,jdbcType=INTEGER}
    where sys_id = #{sysId,jdbcType=CHAR}
  </update>

  <select id="selectByQueryCondition" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user
    <where>
      <foreach collection="query.andClause.conditionList" item="condition" separator="and">
        <choose>
          <when test="condition.noValue">
            ${condition.condition}
          </when>
          <otherwise>
            ${condition.condition} #{condition.value}
          </otherwise>
        </choose>
      </foreach>
      <foreach collection="query.orClause.clauseList" item="clause" open="(" close=")" separator="and">
        <foreach collection="clause.conditionList" item="condition" separator="or">
          <choose>
            <when test="condition.noValue">
              ${condition.condition}
            </when>
            <otherwise>
              ${condition.condition} #{condition.value}
            </otherwise>
          </choose>
        </foreach>
      </foreach>
    </where>
    <if test="query.orderByClause != null">
      order by ${query.orderByClause}
    </if>
  </select>
</mapper>