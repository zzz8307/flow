<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.rc.flow.dao.ProblemMapper">
  <resultMap id="BaseResultMap" type="cn.rc.flow.domain.Problem">
    <id column="sys_id" jdbcType="CHAR" property="sysId" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="first_reported_by_task" jdbcType="CHAR" property="firstReportedByTask" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="priority" jdbcType="INTEGER" property="priority" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="cmdb_ci" jdbcType="VARCHAR" property="cmdbCi" />
    <result column="assignment_group" jdbcType="CHAR" property="assignmentGroup" />
    <result column="assigned_to" jdbcType="CHAR" property="assignedTo" />
    <result column="short_description" jdbcType="VARCHAR" property="shortDescription" />
    <result column="workaround" jdbcType="VARCHAR" property="workaround" />
    <result column="cause_notes" jdbcType="VARCHAR" property="causeNotes" />
    <result column="fix_notes" jdbcType="VARCHAR" property="fixNotes" />
    <result column="resolved_by" jdbcType="CHAR" property="resolvedBy" />
    <result column="resolved_time" jdbcType="TIMESTAMP" property="resolvedTime" />
    <result column="created_by" jdbcType="CHAR" property="createdBy" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_by" jdbcType="CHAR" property="updatedBy" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="sys_mod_count" jdbcType="INTEGER" property="sysModCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sys_id, number, first_reported_by_task, state, priority, category, cmdb_ci, assignment_group, 
    assigned_to, short_description, workaround, cause_notes, fix_notes, resolved_by, 
    resolved_time, created_by, created_time, updated_by, updated_time, sys_mod_count
  </sql>
  <select id="selectByExample" parameterType="cn.rc.flow.domain.ProblemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_problem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_problem
    where sys_id = #{sysId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_problem
    where sys_id = #{sysId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.rc.flow.domain.ProblemExample">
    delete from t_problem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.rc.flow.domain.Problem">
    insert into t_problem (sys_id, number, first_reported_by_task, 
      state, priority, category, 
      cmdb_ci, assignment_group, assigned_to, 
      short_description, workaround, cause_notes, 
      fix_notes, resolved_by, resolved_time, 
      created_by, created_time, updated_by, 
      updated_time, sys_mod_count)
    values (#{sysId,jdbcType=CHAR}, #{number,jdbcType=VARCHAR}, #{firstReportedByTask,jdbcType=CHAR}, 
      #{state,jdbcType=INTEGER}, #{priority,jdbcType=INTEGER}, #{category,jdbcType=VARCHAR}, 
      #{cmdbCi,jdbcType=VARCHAR}, #{assignmentGroup,jdbcType=CHAR}, #{assignedTo,jdbcType=CHAR}, 
      #{shortDescription,jdbcType=VARCHAR}, #{workaround,jdbcType=VARCHAR}, #{causeNotes,jdbcType=VARCHAR}, 
      #{fixNotes,jdbcType=VARCHAR}, #{resolvedBy,jdbcType=CHAR}, #{resolvedTime,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=CHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=CHAR}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{sysModCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.rc.flow.domain.Problem">
    insert into t_problem
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sysId != null">
        sys_id,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="firstReportedByTask != null">
        first_reported_by_task,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="cmdbCi != null">
        cmdb_ci,
      </if>
      <if test="assignmentGroup != null">
        assignment_group,
      </if>
      <if test="assignedTo != null">
        assigned_to,
      </if>
      <if test="shortDescription != null">
        short_description,
      </if>
      <if test="workaround != null">
        workaround,
      </if>
      <if test="causeNotes != null">
        cause_notes,
      </if>
      <if test="fixNotes != null">
        fix_notes,
      </if>
      <if test="resolvedBy != null">
        resolved_by,
      </if>
      <if test="resolvedTime != null">
        resolved_time,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="sysModCount != null">
        sys_mod_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sysId != null">
        #{sysId,jdbcType=CHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="firstReportedByTask != null">
        #{firstReportedByTask,jdbcType=CHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="cmdbCi != null">
        #{cmdbCi,jdbcType=VARCHAR},
      </if>
      <if test="assignmentGroup != null">
        #{assignmentGroup,jdbcType=CHAR},
      </if>
      <if test="assignedTo != null">
        #{assignedTo,jdbcType=CHAR},
      </if>
      <if test="shortDescription != null">
        #{shortDescription,jdbcType=VARCHAR},
      </if>
      <if test="workaround != null">
        #{workaround,jdbcType=VARCHAR},
      </if>
      <if test="causeNotes != null">
        #{causeNotes,jdbcType=VARCHAR},
      </if>
      <if test="fixNotes != null">
        #{fixNotes,jdbcType=VARCHAR},
      </if>
      <if test="resolvedBy != null">
        #{resolvedBy,jdbcType=CHAR},
      </if>
      <if test="resolvedTime != null">
        #{resolvedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=CHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=CHAR},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysModCount != null">
        #{sysModCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.rc.flow.domain.ProblemExample" resultType="java.lang.Long">
    select count(*) from t_problem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_problem
    <set>
      <if test="record.sysId != null">
        sys_id = #{record.sysId,jdbcType=CHAR},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.firstReportedByTask != null">
        first_reported_by_task = #{record.firstReportedByTask,jdbcType=CHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.priority != null">
        priority = #{record.priority,jdbcType=INTEGER},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.cmdbCi != null">
        cmdb_ci = #{record.cmdbCi,jdbcType=VARCHAR},
      </if>
      <if test="record.assignmentGroup != null">
        assignment_group = #{record.assignmentGroup,jdbcType=CHAR},
      </if>
      <if test="record.assignedTo != null">
        assigned_to = #{record.assignedTo,jdbcType=CHAR},
      </if>
      <if test="record.shortDescription != null">
        short_description = #{record.shortDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.workaround != null">
        workaround = #{record.workaround,jdbcType=VARCHAR},
      </if>
      <if test="record.causeNotes != null">
        cause_notes = #{record.causeNotes,jdbcType=VARCHAR},
      </if>
      <if test="record.fixNotes != null">
        fix_notes = #{record.fixNotes,jdbcType=VARCHAR},
      </if>
      <if test="record.resolvedBy != null">
        resolved_by = #{record.resolvedBy,jdbcType=CHAR},
      </if>
      <if test="record.resolvedTime != null">
        resolved_time = #{record.resolvedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=CHAR},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=CHAR},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sysModCount != null">
        sys_mod_count = #{record.sysModCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_problem
    set sys_id = #{record.sysId,jdbcType=CHAR},
      number = #{record.number,jdbcType=VARCHAR},
      first_reported_by_task = #{record.firstReportedByTask,jdbcType=CHAR},
      state = #{record.state,jdbcType=INTEGER},
      priority = #{record.priority,jdbcType=INTEGER},
      category = #{record.category,jdbcType=VARCHAR},
      cmdb_ci = #{record.cmdbCi,jdbcType=VARCHAR},
      assignment_group = #{record.assignmentGroup,jdbcType=CHAR},
      assigned_to = #{record.assignedTo,jdbcType=CHAR},
      short_description = #{record.shortDescription,jdbcType=VARCHAR},
      workaround = #{record.workaround,jdbcType=VARCHAR},
      cause_notes = #{record.causeNotes,jdbcType=VARCHAR},
      fix_notes = #{record.fixNotes,jdbcType=VARCHAR},
      resolved_by = #{record.resolvedBy,jdbcType=CHAR},
      resolved_time = #{record.resolvedTime,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=CHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=CHAR},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      sys_mod_count = #{record.sysModCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.rc.flow.domain.Problem">
    update t_problem
    <set>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="firstReportedByTask != null">
        first_reported_by_task = #{firstReportedByTask,jdbcType=CHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="cmdbCi != null">
        cmdb_ci = #{cmdbCi,jdbcType=VARCHAR},
      </if>
      <if test="assignmentGroup != null">
        assignment_group = #{assignmentGroup,jdbcType=CHAR},
      </if>
      <if test="assignedTo != null">
        assigned_to = #{assignedTo,jdbcType=CHAR},
      </if>
      <if test="shortDescription != null">
        short_description = #{shortDescription,jdbcType=VARCHAR},
      </if>
      <if test="workaround != null">
        workaround = #{workaround,jdbcType=VARCHAR},
      </if>
      <if test="causeNotes != null">
        cause_notes = #{causeNotes,jdbcType=VARCHAR},
      </if>
      <if test="fixNotes != null">
        fix_notes = #{fixNotes,jdbcType=VARCHAR},
      </if>
      <if test="resolvedBy != null">
        resolved_by = #{resolvedBy,jdbcType=CHAR},
      </if>
      <if test="resolvedTime != null">
        resolved_time = #{resolvedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=CHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=CHAR},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysModCount != null">
        sys_mod_count = #{sysModCount,jdbcType=INTEGER},
      </if>
    </set>
    where sys_id = #{sysId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.rc.flow.domain.Problem">
    update t_problem
    set number = #{number,jdbcType=VARCHAR},
      first_reported_by_task = #{firstReportedByTask,jdbcType=CHAR},
      state = #{state,jdbcType=INTEGER},
      priority = #{priority,jdbcType=INTEGER},
      category = #{category,jdbcType=VARCHAR},
      cmdb_ci = #{cmdbCi,jdbcType=VARCHAR},
      assignment_group = #{assignmentGroup,jdbcType=CHAR},
      assigned_to = #{assignedTo,jdbcType=CHAR},
      short_description = #{shortDescription,jdbcType=VARCHAR},
      workaround = #{workaround,jdbcType=VARCHAR},
      cause_notes = #{causeNotes,jdbcType=VARCHAR},
      fix_notes = #{fixNotes,jdbcType=VARCHAR},
      resolved_by = #{resolvedBy,jdbcType=CHAR},
      resolved_time = #{resolvedTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=CHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=CHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      sys_mod_count = #{sysModCount,jdbcType=INTEGER}
    where sys_id = #{sysId,jdbcType=CHAR}
  </update>

  <select id="selectByQueryCondition" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_problem
    <where>
      <foreach collection="query.andClause.conditionList" item="condition" separator="and">
        <choose>
          <when test="condition.noValue">
            ${condition.condition}
          </when>
          <otherwise>
            ${condition.condition} #{condition.value}
          </otherwise>
        </choose>
      </foreach>
      <foreach collection="query.orClause.clauseList" item="clause" open="(" close=")" separator="and">
        <foreach collection="clause.conditionList" item="condition" separator="or">
          <choose>
            <when test="condition.noValue">
              ${condition.condition}
            </when>
            <otherwise>
              ${condition.condition} #{condition.value}
            </otherwise>
          </choose>
        </foreach>
      </foreach>
    </where>
    <if test="query.orderByClause != null">
      order by ${query.orderByClause}
    </if>
  </select>
</mapper>