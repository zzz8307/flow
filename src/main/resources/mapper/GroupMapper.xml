<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.rc.flow.dao.GroupMapper">
  <resultMap id="BaseResultMap" type="cn.rc.flow.domain.Group">
    <id column="sys_id" jdbcType="CHAR" property="sysId" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="group_email" jdbcType="CHAR" property="groupEmail" />
    <result column="manager_id" jdbcType="CHAR" property="managerId" />
    <result column="description" jdbcType="CHAR" property="description" />
    <result column="created_by" jdbcType="CHAR" property="createdBy" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_by" jdbcType="CHAR" property="updatedBy" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="sys_mod_count" jdbcType="INTEGER" property="sysModCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sys_id, name, group_email, manager_id, description, created_by, created_time, updated_by, 
    updated_time, sys_mod_count
  </sql>
  <select id="selectByExample" parameterType="cn.rc.flow.domain.GroupExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_group
    where sys_id = #{sysId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_group
    where sys_id = #{sysId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.rc.flow.domain.GroupExample">
    delete from t_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.rc.flow.domain.Group">
    insert into t_group (sys_id, name, group_email, 
      manager_id, description, created_by, 
      created_time, updated_by, updated_time, 
      sys_mod_count)
    values (#{sysId,jdbcType=CHAR}, #{name,jdbcType=CHAR}, #{groupEmail,jdbcType=CHAR}, 
      #{managerId,jdbcType=CHAR}, #{description,jdbcType=CHAR}, #{createdBy,jdbcType=CHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=CHAR}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{sysModCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.rc.flow.domain.Group">
    insert into t_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sysId != null">
        sys_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="groupEmail != null">
        group_email,
      </if>
      <if test="managerId != null">
        manager_id,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="sysModCount != null">
        sys_mod_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sysId != null">
        #{sysId,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="groupEmail != null">
        #{groupEmail,jdbcType=CHAR},
      </if>
      <if test="managerId != null">
        #{managerId,jdbcType=CHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=CHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=CHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=CHAR},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysModCount != null">
        #{sysModCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.rc.flow.domain.GroupExample" resultType="java.lang.Long">
    select count(*) from t_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_group
    <set>
      <if test="record.sysId != null">
        sys_id = #{record.sysId,jdbcType=CHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=CHAR},
      </if>
      <if test="record.groupEmail != null">
        group_email = #{record.groupEmail,jdbcType=CHAR},
      </if>
      <if test="record.managerId != null">
        manager_id = #{record.managerId,jdbcType=CHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=CHAR},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=CHAR},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=CHAR},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sysModCount != null">
        sys_mod_count = #{record.sysModCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_group
    set sys_id = #{record.sysId,jdbcType=CHAR},
      name = #{record.name,jdbcType=CHAR},
      group_email = #{record.groupEmail,jdbcType=CHAR},
      manager_id = #{record.managerId,jdbcType=CHAR},
      description = #{record.description,jdbcType=CHAR},
      created_by = #{record.createdBy,jdbcType=CHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=CHAR},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      sys_mod_count = #{record.sysModCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.rc.flow.domain.Group">
    update t_group
    <set>
      <if test="name != null">
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="groupEmail != null">
        group_email = #{groupEmail,jdbcType=CHAR},
      </if>
      <if test="managerId != null">
        manager_id = #{managerId,jdbcType=CHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=CHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=CHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=CHAR},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysModCount != null">
        sys_mod_count = #{sysModCount,jdbcType=INTEGER},
      </if>
    </set>
    where sys_id = #{sysId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.rc.flow.domain.Group">
    update t_group
    set name = #{name,jdbcType=CHAR},
      group_email = #{groupEmail,jdbcType=CHAR},
      manager_id = #{managerId,jdbcType=CHAR},
      description = #{description,jdbcType=CHAR},
      created_by = #{createdBy,jdbcType=CHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=CHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      sys_mod_count = #{sysModCount,jdbcType=INTEGER}
    where sys_id = #{sysId,jdbcType=CHAR}
  </update>

  <select id="selectByQueryCondition" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_group
    <where>
      <foreach collection="query.andClause.conditionList" item="condition" separator="and">
        <choose>
          <when test="condition.noValue">
            ${condition.condition}
          </when>
          <otherwise>
            ${condition.condition} #{condition.value}
          </otherwise>
        </choose>
      </foreach>
      <foreach collection="query.orClause.clauseList" item="clause" open="(" close=")" separator="and">
        <foreach collection="clause.conditionList" item="condition" separator="or">
          <choose>
            <when test="condition.noValue">
              ${condition.condition}
            </when>
            <otherwise>
              ${condition.condition} #{condition.value}
            </otherwise>
          </choose>
        </foreach>
      </foreach>
    </where>
    <if test="query.orderByClause != null">
      order by ${query.orderByClause}
    </if>
  </select>
</mapper>