<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.rc.flow.dao.ActivityMapper">
  <resultMap id="BaseResultMap" type="cn.rc.flow.domain.Activity">
    <id column="sys_id" jdbcType="CHAR" property="sysId" />
    <result column="task_id" jdbcType="CHAR" property="taskId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="created_by" jdbcType="CHAR" property="createdBy" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sys_id, task_id, type, detail, created_by, created_time
  </sql>
  <select id="selectByExample" parameterType="cn.rc.flow.domain.ActivityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_activity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_activity
    where sys_id = #{sysId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_activity
    where sys_id = #{sysId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.rc.flow.domain.ActivityExample">
    delete from t_activity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.rc.flow.domain.Activity">
    insert into t_activity (sys_id, task_id, type, 
      detail, created_by, created_time
      )
    values (#{sysId,jdbcType=CHAR}, #{taskId,jdbcType=CHAR}, #{type,jdbcType=VARCHAR}, 
      #{detail,jdbcType=VARCHAR}, #{createdBy,jdbcType=CHAR}, #{createdTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.rc.flow.domain.Activity">
    insert into t_activity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sysId != null">
        sys_id,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sysId != null">
        #{sysId,jdbcType=CHAR},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=CHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=CHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.rc.flow.domain.ActivityExample" resultType="java.lang.Long">
    select count(*) from t_activity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_activity
    <set>
      <if test="record.sysId != null">
        sys_id = #{record.sysId,jdbcType=CHAR},
      </if>
      <if test="record.taskId != null">
        task_id = #{record.taskId,jdbcType=CHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=CHAR},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_activity
    set sys_id = #{record.sysId,jdbcType=CHAR},
      task_id = #{record.taskId,jdbcType=CHAR},
      type = #{record.type,jdbcType=VARCHAR},
      detail = #{record.detail,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=CHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.rc.flow.domain.Activity">
    update t_activity
    <set>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=CHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=CHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where sys_id = #{sysId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.rc.flow.domain.Activity">
    update t_activity
    set task_id = #{taskId,jdbcType=CHAR},
      type = #{type,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=CHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP}
    where sys_id = #{sysId,jdbcType=CHAR}
  </update>
</mapper>